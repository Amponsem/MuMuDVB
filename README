MuMuDVB - README
================
Brice Dubost <mumudvb@braice.net>
Version 1.5.5

image::http://mumudvb.braice.net/mumudvbwiki/skins/common/images/logo_mumu_wiki.png[caption="logo MuMuDVB"]

Presentation
------------

Description
~~~~~~~~~~~

MuMuDVB is originally a modification of dvbstream that http://www.crans.org[cr@ns] made. We have decided to redistribute it.

Now, it's a standalone project.

Mumudvb is a program that redistributes streams from DVB on a network using
multicasting or HTTP unicast. It can multicast a whole DVB transponder by assigning
each channel a different multicast IP.

Website
~~~~~~~

http://mumudvb.braice.net[Mumudvb main site]


Authors and contacts
--------------------

.Upstream author
- mailto:mumudvb@braice.net[Brice Dubost]

.Contributions
- mailto:manu@REMOVEMEcrans.ens-cachan.fr[Manuel Sabban] (getopt)
- mailto:glondu@REMOVEMEcrans.ens-cachan.fr[Stéphane Glondu] (makefile cleaning, man page, debian package)
- Special thanks to Dave Chapman (dvbstream author)
- Pierre Gronlier, Sébastien Raillard


.Mailing list:
- mailto:mumudvb-dev@REMOVEMElists.crans.org[MuMuDVB dev]
- https://lists.crans.org/listinfo/mumudvb-dev[MuMuDVB dev list information and subscription]



Contents and features
---------------------

Feature overview
~~~~~~~~~~~~~~~~~

- Stream channels from a transponder on different multicast IPs
- The program can rewrite the PAT PID in order to announce only present channels (useful for some set-top boxes)
- Support for scrambled channels (if you don't have a CAM you can use sasc-ng, but check if it's allowed in you country/by your broadcaster)
- Support for automatic configuration i.e channels discovery, see <<autoconfiguration,Autoconfiguration>> section
- Generation of SAP announces, see <<sap,SAP>> section
- Support of DVB-S, DVB-C, DVB-T and ATSC
- Possibility to partially rewrite the stream for better compatibility with set-top boxes. See <<pat_rewrite,Pat Rewrite>> section.
- Support for HTTP unicast see <<unicast,http unicast>> section

Detailled feature list
~~~~~~~~~~~~~~~~~~~~~~

- Streams channels from a transponder on different multicast IPs
- Can show reception level when streaming
- Show if channels are successfully descrambled by the CAM
- Makes a list of streamed and down channels in real time
- Can deamonize and write his own process id in a file
- Supports standard and universals LNBs
- Can stop himself if it receives no data from the card after a defined timeout
- Stops trying tuning after a configurable timeout
- The mandatory pids are always sent with all channels : 
  * PAT (0): Program Association Table
  * NIT (16): Network Information Table: intended to provide information about the physical network.
  * SDT (17): Service Description Table: data describing the services in the system e.g. names of services, the service provider, etc.
  * EIT (18): Event Information Table: data concerning events or programmes such as event name, start time, duration, etc.
  * TDT (20): Time and Date Table: information related to the present time and date.This information is given in a separate table due to the frequent updating of this information.
- Automatically suscribe to all multicast groups (IGMP membership request) in order to avoid some switches to broadcast all channels.
- Supports autoconfiguration, see <<autoconfiguration,Autoconfiguration>> section
- Debian flavor initialisation scripts
- Can skip the tuning of the card as a temporary workaround for DVB-S2

Others programs are availaible from http://gitweb.braice.net/gitweb?p=mumudvb_tools;a=summary[MuMuDVB Tools Repository] :

- relay: this program takes a stream and sends it again on a different ip. It can be used to unicast a stream over a network that doesn't support multicast, and multicast it again at the other end
- recup_sap: tiny sap client, get sap announces during 60 seconds and put them on a file (unsorted)


Installation
------------

From sources
~~~~~~~~~~~~

In order to install MuMuDVB type:

-----------------------------
$ make
# make install
-----------------------------

[NOTE]
The cam support depends on libdvben50221, libucsi (from linuxtv's dvb-apps) and libpthread. If you don't want to compile MuMuDVB with cam support, type `make CAMSUPPORT=0` instead of `make`.

[NOTE]
The decoding of long channel names for autogonfiguration in ATSC depends on libucsi (from linuxtv's dvb-apps), if you don't want to compile MuMuDVB with this feature (and avoid the libucsi dependance) type `make LIBUCSI=0` instead of `make`.

In order to install starting scripts (debian flavor) type:

------------------------------------------------------------
# cp scripts/debian/etc/default/mumudvb /etc/default/mumudvb
# cp scripts/debian/etc/init.d/mumudvb /etc/init.d/mumudvb
------------------------------------------------------------

[NOTE]
It is advised to create an user for MuMuDVB, e.g. : `_mumudvb`, you have to add this user to the video group and make the directory `/var/run/mumudvb` RW by this user. By doing this, you'll be able to get all the features of MuMuDVB


From Debian package
~~~~~~~~~~~~~~~~~~~

If you want to install a version which is not in your repositories, you can install it by hand by typing:

--------------------
dpkg -i mumudvb*.deb
--------------------

Usage
-----

The documentation for configuration file syntax is in `doc/README_CONF`.

Usage:

--------------------------------------
mumudvb [options] -c config_file
mumudvb [options] --config config_file
--------------------------------------

Possible options are:

------------------------------------------------------------------
-d, --debug
	Don't deamonize and print messages on the standard output.

-s, --signal
	Print signal strenght every 5 seconds

-h, --help
	Show help

-v
	More verbose (add for more)

-q
	More quiet (add for less)
------------------------------------------------------------------

Signal: (see kill(1))
------------------------------------------------------------------
    SIGUSR1: switch the signal strenght printing
------------------------------------------------------------------

[[autoconfiguration]]
Autoconfiguration
-----------------

MuMuDVB is able to find the channels in the transponder and their PIDs (Program IDentifiers).

Without autoconfiguration, you have to set the transponder parameters, and for each channel, the multicast ip, the name and the PIDs (PMT, audio video)

At the end of autoconfiguration MuMuDVB, generates a config file with the discovered parameters. You can find this file in: `/var/run/mumudvb/mumudvb_generated_conf`

MuMuDVB is able to do two kinds of autoconfiguration:

Full autoconfiguration
~~~~~~~~~~~~~~~~~~~~~~

This is the easiest way to use MuMuDVB.

Use this when you want to stream a full transponder.

In this mode, MuMuDVB will find for you the different channels, their name and their pids (PMT, PCR, Audio, Video, Subtitle, Teletext and AC3).

In order to use this mode you have to:
- Set the tuning parameters to your config file
- Add `autoconfiguration=2` to your config file
- You don't have to set any channels
- For a first use don't forget to put the `-d` parameter when you launch MuMuDVB:
   e.g. `mumudvb -d -c your_config_file`

.Example config file for satellite at frequency 11.296GHz with horizontal polarization
--------------------
freq=11296
pol=h
srate=27500
autoconfiguration=2
--------------------

The channels will be streamed over the multicasts ip adresses 239.100.c.n where c is the card number (0 by default) and n is the channel number.

If you don't use the common_port directive, MuMuDVB will use the port 1234.

[NOTE]
By default, SAP announces are activated if you use this autoconfiguration mode. To desactivate them put `sap=0` after the `autoconfiguration=2` line.

[NOTE]
A detailled, documented example configuration file can be found in `doc/configuration_examples/autoconf_full.conf`

[[autoconfiguration_simple]]
Simple autoconfiguration
~~~~~~~~~~~~~~~~~~~~~~~~

Use this when you want to control the name of the channels, and wich channel you want to stream.


- You have to add 'autoconfiguration=1' in the head of your config file.
- For each channel, you have to set:
 * the Ip adress
 * the name
 * the PMT pid


MuMuDVB will find the audio, video, PCR, teletext, subtitling and ac3 pids for you before streaming.

[NOTE]
If you put more than one pid for a channel, MuMuDVB will desactivate autoconfiguration for this channel.

[NOTE]
A detailled, documented example configuration file can be found in `doc/configuration_examples/autoconf1.conf`

[NOTE]
Simple autoconfiguration can fail finding the good pids if a PMT pid is shared within multiples channels. In this case you have to add the `ts_id` option to the channel to specify the transport stream id, also known as service id.

[[sap]]
SAP announces
-------------

SAP (Session Announcement Protocol) announces are made for the client to know which channels are streamed and what is their name and adress. It avoids to give to the client the list of the multicast ip adresses.

VLC and most of set-top boxes are known to support them.

MuMuDVB will automatically generate and send SAP announces if asked to in the config file or if you are in full autoconfiguration mode.

The SAP announces will be only sent for alive channels. When a channel goes down, MuMuDVB will stop sending announces for this channel, until it goes back.


Asking MuMuDVB to generate SAP announces
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For sending SAP announces you have to add `sap=1` to your config file. The other parameters concerning the sap announces are defined in the `doc/README_CONF` file.

Configuring the client to get the SAP announces
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

VLC > 0.8.2
^^^^^^^^^^^
You have to enter the settings, choose advanced settings. The SAP announces are in playlist->service discovery.

Don't forget to save the settings.

You should have now a SAP section in your playlist.

VLC < 0.8.2
^^^^^^^^^^^

Click on the "Settings" menu, then on "add interface" and choose SAP playlist. Then open you playlist, the SAP announces should appear automatically.



[[unicast]]
HTTP Unicast
------------

In addition to multicast, MuMuDVB also supports HTTP unicast. This make you able to use mumudvb on networks wich doesn't support multicast.

There is one listening connection, the channel is selected via the HTTP path, see further.

Be careful with unicast, it can eat a lot of bandwith.

Activate HTTP unicast
~~~~~~~~~~~~~~~~~~~~~

To enable HTTP unicast you have to set the option `ip_http`. This option will set the ip adress on which you want to listen for incoming connections. If you want to listen on all your interfaces, put `0.0.0.0`.

You can also define the listening port using `port_http`. If the port is not defined, the default port will be 4242.

Client side, the different methods to get channels
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Get the channel by number
^^^^^^^^^^^^^^^^^^^^^^^^^

You can ask the channel by the channel number (starting at 1).

If you server is listening on the ip 10.0.1 and the port 4242,

------------------------------------
vlc http://10.0.0.1:4242/bynumber/3
------------------------------------

will give you the channel number 3. This works also with xine and mplayer.

Get the channel by name
^^^^^^^^^^^^^^^^^^^^^^^

[NOTE]
This is not implemented for the moment

You can also get the channel by name. You have to remove spaces.

Get the channels list
^^^^^^^^^^^^^^^^^^^^^

To get the channel list (in basic html) just enter the adress `http://10.0.0.1:4242/channels_list.html` in your web browser.

Other methods like test/plain can be easely implemented, please contact in this case.

HTTP unicast and monitoring
~~~~~~~~~~~~~~~~~~~~~~~~~~~

This HTTP connection can be used to monitor MuMuDVB. This feature will be implemented in a near future release. Please tell wich data can be interesting for you.


Monitoring
----------

You can use http://mmonit.com/monit/[Monit] to monitor MuMuDVB an restart it when it experiences problems (MuMuDVB kill himself when big issues appear).

You have to install the init scripts (automatic if you used the Debian package) and add the following lines to your `/etc/monit/services` file:

----------------------------------------------------------------------
check process mumudvb with pidfile /var/run/mumudvb/mumudvb_carte0.pid
    start program = "/etc/init.d/mumudvb start"
    stop program = "/etc/init.d/mumudvb stop"
----------------------------------------------------------------------

[NOTE]
The 0 have to be replaced by the DVB card number if you have multiples cards.

For more detailled information, refer to the http://mmonit.com/monit/[Monit Website].

MuMuDVB usually run for many days without problems, but with monit you are safe. Monit is also able to send e-mails in case of problems.


Scrambled channels support
--------------------------

Important note : check the contract with your broadcaster to see if you are allowed to stream the scrambled channels you're subscribed to.

Hardware descrambling
~~~~~~~~~~~~~~~~~~~~~

MuMuDVB supports scrambled channels via hardware descrambling i.e. a CAM (Conditionnal Access Module). It can ask the cam to descramble multiple channels if the cam supports it (Aston PRO, or Powercams are known to work with multiple channels).

If you are limited by the number of PIDs, it is possible to ask the cam to decrypt only the audio and video. This feature is not implemented, please ask if you need it.

The hardware descramblig uses almost no CPU, all the descrambling is made by the CAM.

[NOTE]
MuMuDVB doesn't query the cam before asking for descrambling. The query is not reliable. Most of CAMs answer a menu when the descrambling is not possible and MuMuDVB will display it on the standard error. In other words MuMuDVB cannot tell you cleary why a channel is not descrambled if the CAM doesn't reply a menu.

The information concerning the cam is stored in '''/var/run/mumudvb/caminfo_carte%d''' where %d is the card number.

.Example contents of '''/var/run/mumudvb/caminfo_carte%d''' 
----------------------------------------------------
CAM_Application_Type=01
CAM_Application_Manufacturer=02ca
CAM_Manufacturer_Code=3000
CAM_Menu_String=PowerCam_HD V2.0
ID_CA_Supported=0100
ID_CA_Supported=0500
----------------------------------------------------


How to ask MuMuDVB for descrambling?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.You are using full autoconfiguration :

Just add `cam_support=1` to your config file

.You are using partial autoconfiguration or no autoconfiguration
 * Add `cam_support=1` to your config file (before the channels)
 * For each scrambled channel add the `cam_pmt_pid` option. This option is made for MuMuDVB to know wich PID is the PMT PID wich will be used to ask for descrambling

[NOTE]
You have an example of cam support in doc/configuration_examples/autoconf1.conf



Software descrambling
~~~~~~~~~~~~~~~~~~~~~

Important note : this solution is not legal in all countries and it's not allowed by some provider contracts.

MuMuDVB has been reported to work with software descrambling solutions ..

TODO

Scrambling status
~~~~~~~~~~~~~~~~~

The scrambling status is stored together with the streamed channel list. 

.Example
----------------------------------------------
239.100.0.7:1234:ESCALES:PartiallyUnscrambled
239.100.0.8:1234:Fit/Toute l'Histoire:PartiallyUnscrambled
239.100.0.9:1234:NT1:PartiallyUnscrambled
239.100.0.10:1234:ACTION:PartiallyUnscrambled
239.100.0.11:1234:MANGAS:PartiallyUnscrambled
239.100.0.12:1234:ENCYCLOPEDIA:PartiallyUnscrambled
239.100.0.13:1234:XXL PL:PartiallyUnscrambled
239.100.0.14:1234:France 5:HighlyScrambled
239.100.0.16:1234:LCP:FullyUnscrambled
239.100.0.17:1234:VIDEOCLICK:FullyUnscrambled
----------------------------------------------

 * FullyUnscrambled : less than 5% of scrambled packets
 * PartiallyUnscrambled : between 5% and 95% of scrambled packets
 * HighlyScrambled : more than 95% of scrambled packets

[[pat_rewrite]]
PAT (Program Allocation Table) Rewriting
-----------------------------------------

This feature is intended for set-top boxes. This option will announce only the streamed channel in the Program Allocation Table. Computer clients parse this table and decode the first working program. Set-top boxes usually try only the first one which give usually a blank screen in most of the channels. 

To enable PAT rewriting, add `rewrite_pat=1` to your config file. This feature consumes few CPU, since the rewritten PAT is stored in memory and computed only once per channel.

[NOTE]
PAT rewrite can fail (i.e. doesn't solve the previous symptoms) for some channels if their PMT pid is shared. In this case you have to add the `ts_id` option to the channel to specify the transport stream id, also known as service id.


Technical details (not sorted)
------------------------------

 * CPU consuming: MuMuDVB takes 15% CPU of a celeron 2.6GHz with an Hauppauge card and linux version 2.6.9 when streaming a full transponder (about 30MBit/s)

 * Don't use old via or nForce chipsets. They can't deal with a lot of data on the PCI bus.

 * When the program starts, he writes the channel list on /var/run/mumudvb/chaines_diffusees_carte%d (where %d is the card number). This file contains streamed channels (updated every 5 seconds) in the form: "name:ip:port"

 * MuMuDVB can deal with more than 4 cards. You must use a kernel >= 2.6.11 and udev statically compiled witch klibc (04/2005) waiting for glibc update... Note: this issue is solved now ( with udev 104 and libc6 2.7 )

 * When daemonized, MuMuDVB writes its process identifier in `/var/run/mumudvb/mumudvb_carte%d.pid`, where %d is replaced by the card number

 * MuMuDVB supports satellite in the Ku band, with universal or standard LNBs. The support of satellites in the S or C band can be implemented. Please contact if you need it.

Known issues
------------

VLC can't read the stream but it is fine with xine or mplayer
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 * For VLC, you must specify the PMT PID besides audio and video pids.
It's a frequent issue. To solve it you can use `vlc -v` and you'll see a ligne like: `[00000269] ts demuxer debug:   * number=1025 pid=110` you'll have the pid associated with your number, you can also use dvbsnoop, or see how to get pids in doc/README_CONF. Another solution is to use full autoconfiguration.

VLC reads the video but no audio
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 * This problem can happend if the PCR (i.e. clock) information is not carried with the video. In this case you have to check if the PCR PID is in the PIDs list.

MuMuDVB can't deamonize
~~~~~~~~~~~~~~~~~~~~~~~

 * In order to deamonize, MuMuDVB needs the directory `/var/run/mumudvb/` to be writable, in order to write his process identifier and the channel list.

The system crashes or freeze
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 * Old via chipset or nForce chipset are not professional chipsets. They can't deal with a lot of data on PCI. But you can try to tune your BIOS.

Tuning issues with DVB-T
~~~~~~~~~~~~~~~~~~~~~~~~

 * You must check tuning settings, knowing that auto bandwidth does'nt work.

The set-top box display a blank screen
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 * If the stream is working well when reading it with a computer and not with your set-top box, this is probably because your set-top box needs the PAT PID to be rewritten. To do this add `rewrite_pat=1` to your config file.

Simple autoconfiguration fails finding the right pids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 * This can happend if a PMT pid is shared among multiple channels, see <<autoconfiguration_simple,simple autoconfiguration>> section for more details.